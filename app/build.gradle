apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "com.example.android.architecture"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true

    // 定数の定義
    buildConfigField 'Long', 'CONNECT_TIMEOUT', '10L'
    buildConfigField 'String', 'POST_URL', 'BASE_URL + "post.php"'
    buildConfigField 'String', 'USER_URL', 'BASE_URL + "user.php"'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildTypes {
    debug {
      minifyEnabled true
      // コードとリソースの圧縮 https://developer.android.com/studio/build/shrink-code.html#gradle-shrinker
      useProguard false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }

    release {
      minifyEnabled true
      useProguard true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
  }

  flavorDimensions "default"

  productFlavors {
    development {
      dimension "default"
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"

      buildConfigField 'String', 'BASE_URL', '"http://10.0.2.2/EditriumAPI/"'
    }

    continuousIntegration {
      dimension "default"
      applicationIdSuffix ".ci"
      versionNameSuffix "-ci"

      buildConfigField 'String', 'BASE_URL', '"http://localhost/EditriumAPI/"'
    }

    appTest {
      dimension "default"
      applicationIdSuffix ".tesing"
      versionNameSuffix "-testing"

      buildConfigField 'String', 'BASE_URL', '"http://localhost/EditriumAPI/"'
    }

    staging {
      dimension "default"
      applicationIdSuffix ".staging"
      versionNameSuffix "-staging"

      buildConfigField 'String', 'BASE_URL', '"http://localhost/EditriumAPI/"'
    }

    production {
      dimension "default"

      buildConfigField 'String', 'BASE_URL', '"http://localhost/EditriumAPI/"'
    }
  }

  // 未使用 developmentRelease と productionDebug の削除
  variantFilter { variant ->
    def names = variant.flavors*.name
    if (variant.buildType.name == 'release' &&
        (names.contains('development') ||
            names.contains('appTest') ||
            names.contains('continuousIntegration'))) {
      variant.setIgnore(true)
    }
    if (variant.buildType.name == 'debug' && names.contains("production")) {
      variant.setIgnore(true)
    }
  }
}

dependencies {

  // App's dependencies, including test
  // implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
  implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
  implementation "com.android.support:design:$rootProject.supportLibraryVersion"
  implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
  implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
  implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"
  implementation "com.google.guava:guava:$rootProject.guavaVersion"
  implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
  implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
  implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
  implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2Version"
  implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
  implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"
  implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
  implementation "com.orhanobut:hawk:$rootProject.hawkVersion"

  // Dependencies for local unit tests
  testImplementation "junit:junit:$rootProject.ext.junitVersion"
  // testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
  // testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

  // Android Testing Support Library's runner and rules
  androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
  androidTestImplementation "com.android.support.test:rules:$rootProject.ext.rulesVersion"

  // Dependencies for Android unit tests
  androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
  mavenCentral()
}
